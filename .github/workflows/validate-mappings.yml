name: Process Mappings

on:
  push:
    branches: [master]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Allow workflow to push commits
  actions: read    # Allow workflow to read action status

jobs:
  process:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install dependencies
      run: uv sync
        
    - name: Run processing pipeline
      run: |
        uv run validate-mappings --full-pipeline
      env:
        # Rate limiting for external requests
        RATE_LIMIT_DELAY: 1.0
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          
          # Check if change summary exists and read commit message data
          if [ -f "change_summary.json" ]; then
            # Extract commit title and description from change summary
            COMMIT_TITLE=$(python -c "import json; data=json.load(open('change_summary.json','r',encoding='utf-8')); print(data.get('commit_title', '🔄 更新映射文件'))")
            COMMIT_DESCRIPTION=$(python -c "import json; data=json.load(open('change_summary.json','r',encoding='utf-8')); print(data.get('commit_description', '自动处理映射文件').replace('\n', '\\n'))")
            
            echo "commit_title=$COMMIT_TITLE" >> $GITHUB_OUTPUT  
            echo "commit_description=$COMMIT_DESCRIPTION" >> $GITHUB_OUTPUT
          else
            echo "commit_title=🔄 更新映射文件" >> $GITHUB_OUTPUT
            echo "commit_description=自动处理映射文件，未生成详细变更摘要。" >> $GITHUB_OUTPUT
          fi
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        
        # Use dynamic commit message with title and description
        COMMIT_TITLE="${{ steps.verify-changed-files.outputs.commit_title }}"
        COMMIT_DESCRIPTION="${{ steps.verify-changed-files.outputs.commit_description }}"
        
        # Create commit with title and description
        git commit -m "$COMMIT_TITLE" -m "$COMMIT_DESCRIPTION"
        git push origin master
